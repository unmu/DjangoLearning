Django项目目录

manage.py     命令行工具，使开发者用多种方式对Django项目进行交互
project目录:
  __init__.py     空文件，它告诉Python这个目录应该被看作一个Python包
  settings.py   项目配置文件
  urls.py       项目url声明
  wsgi.py       项目与WSGI兼容的Web服务器入口
  
Django默认使用SQLite数据库（settings.py里已说明）
--------------------------------
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
---------------------------------

为其配置mysql数据库：
  -- python 3.x 安装的是PyMySQL
  -> 在__init__.py文件中写入：
    import pymysql
    pymysql.version_info = (1, 4, 13, "final", 0)   【没加这行代码时，后续操作出错，版本问题】
    pymysql.install_as_MySQLdb()
  -> 修改settings.py的DATABASEs:
----------------------------------
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'django_test',
        'USER': 'root',
        'PASSWORD': '123456',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}
----------------------------------

配置应用app:
  -> cmd
  -> 找到该Django项目下的manage.py所在目录
     如依次输入：D:
                cd D:\PycharmProjects\DjangoTest
  -> 输入python manage.py startapp myApp
  对应的PyCharm将看到名为myApp的文件夹(应用)
  修改settings.py中的INSTALLED_APPS，添加app名
------------------------------------
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'myApp'
]
------------------------------------
